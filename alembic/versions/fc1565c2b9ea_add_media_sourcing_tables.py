"""add_media_sourcing_tables

Revision ID: fc1565c2b9ea
Revises: 4d2464737f28
Create Date: 2025-10-19 20:50:55.693014

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector.sqlalchemy


# revision identifiers, used by Alembic.
revision: str = 'fc1565c2b9ea'
down_revision: Union[str, Sequence[str], None] = '4d2464737f28'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audio_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=1000), nullable=False),
    sa.Column('original_filename', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('checksum', sa.String(length=64), nullable=False),
    sa.Column('source_type', sa.String(length=50), nullable=False),
    sa.Column('source_url', sa.Text(), nullable=True),
    sa.Column('source_platform', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'checksum', name='uq_user_checksum')
    )
    op.create_index('idx_audio_files_user_id', 'audio_files', ['user_id'])
    op.create_index('idx_audio_files_checksum', 'audio_files', ['checksum'])
    op.create_index('idx_audio_files_source_type', 'audio_files', ['source_type'])
    op.create_index('idx_audio_files_created_at', 'audio_files', [sa.text('created_at DESC')])
    op.create_table('transcriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('audio_file_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('transcript', sa.Text(), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('model_name', sa.String(length=100), nullable=True),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.Column('avg_confidence', sa.Float(), nullable=True),
    sa.Column('processing_time', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['audio_file_id'], ['audio_files.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_transcriptions_audio_file', 'transcriptions', ['audio_file_id'])
    op.create_index('idx_transcriptions_user_id', 'transcriptions', ['user_id'])
    op.create_index('idx_transcriptions_status', 'transcriptions', ['status'])
    op.create_index('idx_transcriptions_created_at', 'transcriptions', [sa.text('created_at DESC')])
    op.create_table('transcription_chunks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transcription_id', sa.Integer(), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('topic_summary', sa.Text(), nullable=True),
    sa.Column('keywords', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('start_time', sa.Float(), nullable=True),
    sa.Column('end_time', sa.Float(), nullable=True),
    sa.Column('start_char_pos', sa.Integer(), nullable=True),
    sa.Column('end_char_pos', sa.Integer(), nullable=True),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=384), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['transcription_id'], ['transcriptions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transcription_id', 'chunk_index', name='uq_transcription_chunk')
    )
    op.create_index('idx_transcription_chunks_transcription', 'transcription_chunks', ['transcription_id'])
    op.execute("CREATE INDEX idx_transcription_chunks_embedding ON transcription_chunks USING ivfflat (embedding vector_cosine_ops)")
    op.create_table('transcription_collections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transcription_id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('assigned_by', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['transcription_id'], ['transcriptions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transcription_id', 'collection_id', name='uq_transcription_collection')
    )
    op.create_index('idx_transcription_collections_transcription', 'transcription_collections', ['transcription_id'])
    op.create_index('idx_transcription_collections_collection', 'transcription_collections', ['collection_id'])
    op.create_index('idx_transcription_collections_position', 'transcription_collections', ['position'])
    op.create_table('transcription_topics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transcription_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('ai_confidence', sa.Float(), nullable=True),
    sa.Column('ai_reasoning', sa.Text(), nullable=True),
    sa.Column('assigned_by', sa.String(length=255), nullable=True),
    sa.Column('user_reviewed', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['transcription_id'], ['transcriptions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transcription_id', 'topic_id', name='uq_transcription_topic')
    )
    op.create_index('idx_transcription_topics_transcription', 'transcription_topics', ['transcription_id'])
    op.create_index('idx_transcription_topics_topic', 'transcription_topics', ['topic_id'])
    op.create_index('idx_transcription_topics_ai_confidence', 'transcription_topics', ['ai_confidence'])
    op.drop_index(op.f('idx_collections_type'), table_name='collections')
    op.drop_index(op.f('idx_collections_user_id'), table_name='collections')
    op.drop_index(op.f('idx_job_collections_collection_id'), table_name='job_collections')
    op.drop_index(op.f('idx_job_collections_job_id'), table_name='job_collections')
    op.drop_index(op.f('idx_job_collections_position'), table_name='job_collections')
    op.drop_index(op.f('idx_job_topics_confidence'), table_name='job_topics')
    op.drop_index(op.f('idx_job_topics_job_id'), table_name='job_topics')
    op.drop_index(op.f('idx_job_topics_reviewed'), table_name='job_topics')
    op.drop_index(op.f('idx_job_topics_topic_id'), table_name='job_topics')
    op.add_column('jobs', sa.Column('job_type', sa.String(length=50), nullable=False, server_default='transcription'))
    op.add_column('jobs', sa.Column('audio_file_id', sa.Integer(), nullable=True))
    op.add_column('jobs', sa.Column('source_url', sa.Text(), nullable=True))
    op.create_foreign_key('fk_jobs_audio_file_id', 'jobs', 'audio_files', ['audio_file_id'], ['id'], ondelete='SET NULL')
    op.create_index('idx_jobs_job_type', 'jobs', ['job_type'])
    op.create_index('idx_jobs_audio_file_id', 'jobs', ['audio_file_id'])
    op.drop_index(op.f('idx_topics_parent_id'), table_name='topics')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('idx_topics_parent_id'), 'topics', ['parent_id'], unique=False)
    op.drop_index('idx_jobs_audio_file_id', table_name='jobs')
    op.drop_index('idx_jobs_job_type', table_name='jobs')
    op.drop_constraint('fk_jobs_audio_file_id', 'jobs', type_='foreignkey')
    op.drop_column('jobs', 'source_url')
    op.drop_column('jobs', 'audio_file_id')
    op.drop_column('jobs', 'job_type')
    op.create_index(op.f('idx_job_topics_topic_id'), 'job_topics', ['topic_id'], unique=False)
    op.create_index(op.f('idx_job_topics_reviewed'), 'job_topics', ['user_reviewed'], unique=False)
    op.create_index(op.f('idx_job_topics_job_id'), 'job_topics', ['job_id'], unique=False)
    op.create_index(op.f('idx_job_topics_confidence'), 'job_topics', ['ai_confidence'], unique=False)
    op.create_index(op.f('idx_job_collections_position'), 'job_collections', ['collection_id', 'position'], unique=False)
    op.create_index(op.f('idx_job_collections_job_id'), 'job_collections', ['job_id'], unique=False)
    op.create_index(op.f('idx_job_collections_collection_id'), 'job_collections', ['collection_id'], unique=False)
    op.create_index(op.f('idx_collections_user_id'), 'collections', ['user_id'], unique=False)
    op.create_index(op.f('idx_collections_type'), 'collections', ['collection_type'], unique=False)

    # Drop transcription_topics indexes and table
    op.drop_index('idx_transcription_topics_ai_confidence', table_name='transcription_topics')
    op.drop_index('idx_transcription_topics_topic', table_name='transcription_topics')
    op.drop_index('idx_transcription_topics_transcription', table_name='transcription_topics')
    op.drop_table('transcription_topics')

    # Drop transcription_collections indexes and table
    op.drop_index('idx_transcription_collections_position', table_name='transcription_collections')
    op.drop_index('idx_transcription_collections_collection', table_name='transcription_collections')
    op.drop_index('idx_transcription_collections_transcription', table_name='transcription_collections')
    op.drop_table('transcription_collections')

    # Drop transcription_chunks indexes and table
    op.execute("DROP INDEX IF EXISTS idx_transcription_chunks_embedding")
    op.drop_index('idx_transcription_chunks_transcription', table_name='transcription_chunks')
    op.drop_table('transcription_chunks')

    # Drop transcriptions indexes and table
    op.drop_index('idx_transcriptions_created_at', table_name='transcriptions')
    op.drop_index('idx_transcriptions_status', table_name='transcriptions')
    op.drop_index('idx_transcriptions_user_id', table_name='transcriptions')
    op.drop_index('idx_transcriptions_audio_file', table_name='transcriptions')
    op.drop_table('transcriptions')

    # Drop audio_files indexes and table
    op.drop_index('idx_audio_files_created_at', table_name='audio_files')
    op.drop_index('idx_audio_files_source_type', table_name='audio_files')
    op.drop_index('idx_audio_files_checksum', table_name='audio_files')
    op.drop_index('idx_audio_files_user_id', table_name='audio_files')
    op.drop_table('audio_files')
    # ### end Alembic commands ###
